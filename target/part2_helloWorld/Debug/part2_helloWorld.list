
part2_helloWorld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000f3c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000070  080010e4  080010e4  000110e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001154  08001154  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001154  08001154  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001154  08001154  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001154  08001154  00011154  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001158  08001158  00011158  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800115c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000030  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000094  20000094  00020064  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000954  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002f4  00000000  00000000  000209e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000120  00000000  00000000  00020cd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000e8  00000000  00000000  00020df8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002be0  00000000  00000000  00020ee0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000131b  00000000  00000000  00023ac0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009324  00000000  00000000  00024ddb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e0ff  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b40  00000000  00000000  0002e150  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000064 	.word	0x20000064
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080010cc 	.word	0x080010cc

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000068 	.word	0x20000068
 80001e4:	080010cc 	.word	0x080010cc

080001e8 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	af00      	add	r7, sp, #0
    printf("hello world\n");
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <main+0x14>)
 80001ee:	f000 f9b5 	bl	800055c <puts>
	waitForUserInput();
 80001f2:	f000 f805 	bl	8000200 <waitForUserInput>
 80001f6:	2300      	movs	r3, #0
}
 80001f8:	4618      	mov	r0, r3
 80001fa:	bd80      	pop	{r7, pc}
 80001fc:	080010e4 	.word	0x080010e4

08000200 <waitForUserInput>:


void waitForUserInput(void){
 8000200:	b580      	push	{r7, lr}
 8000202:	af00      	add	r7, sp, #0
	while(getchar()!='\n'){
 8000204:	bf00      	nop
 8000206:	f000 f8fd 	bl	8000404 <getchar>
 800020a:	4603      	mov	r3, r0
 800020c:	2b0a      	cmp	r3, #10
 800020e:	d1fa      	bne.n	8000206 <waitForUserInput+0x6>

	}
	getchar();
 8000210:	f000 f8f8 	bl	8000404 <getchar>
}
 8000214:	bf00      	nop
 8000216:	bd80      	pop	{r7, pc}

08000218 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000218:	b480      	push	{r7}
 800021a:	b083      	sub	sp, #12
 800021c:	af00      	add	r7, sp, #0
 800021e:	4603      	mov	r3, r0
 8000220:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000222:	4b0e      	ldr	r3, [pc, #56]	; (800025c <ITM_SendChar+0x44>)
 8000224:	681b      	ldr	r3, [r3, #0]
 8000226:	4a0d      	ldr	r2, [pc, #52]	; (800025c <ITM_SendChar+0x44>)
 8000228:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800022c:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800022e:	4b0c      	ldr	r3, [pc, #48]	; (8000260 <ITM_SendChar+0x48>)
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	4a0b      	ldr	r2, [pc, #44]	; (8000260 <ITM_SendChar+0x48>)
 8000234:	f043 0301 	orr.w	r3, r3, #1
 8000238:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800023a:	bf00      	nop
 800023c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	f003 0301 	and.w	r3, r3, #1
 8000246:	2b00      	cmp	r3, #0
 8000248:	d0f8      	beq.n	800023c <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800024a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800024e:	79fb      	ldrb	r3, [r7, #7]
 8000250:	6013      	str	r3, [r2, #0]
}
 8000252:	bf00      	nop
 8000254:	370c      	adds	r7, #12
 8000256:	46bd      	mov	sp, r7
 8000258:	bc80      	pop	{r7}
 800025a:	4770      	bx	lr
 800025c:	e000edfc 	.word	0xe000edfc
 8000260:	e0000e00 	.word	0xe0000e00

08000264 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	b086      	sub	sp, #24
 8000268:	af00      	add	r7, sp, #0
 800026a:	60f8      	str	r0, [r7, #12]
 800026c:	60b9      	str	r1, [r7, #8]
 800026e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000270:	2300      	movs	r3, #0
 8000272:	617b      	str	r3, [r7, #20]
 8000274:	e00a      	b.n	800028c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000276:	f3af 8000 	nop.w
 800027a:	4601      	mov	r1, r0
 800027c:	68bb      	ldr	r3, [r7, #8]
 800027e:	1c5a      	adds	r2, r3, #1
 8000280:	60ba      	str	r2, [r7, #8]
 8000282:	b2ca      	uxtb	r2, r1
 8000284:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000286:	697b      	ldr	r3, [r7, #20]
 8000288:	3301      	adds	r3, #1
 800028a:	617b      	str	r3, [r7, #20]
 800028c:	697a      	ldr	r2, [r7, #20]
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	429a      	cmp	r2, r3
 8000292:	dbf0      	blt.n	8000276 <_read+0x12>
	}

return len;
 8000294:	687b      	ldr	r3, [r7, #4]
}
 8000296:	4618      	mov	r0, r3
 8000298:	3718      	adds	r7, #24
 800029a:	46bd      	mov	sp, r7
 800029c:	bd80      	pop	{r7, pc}

0800029e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800029e:	b580      	push	{r7, lr}
 80002a0:	b086      	sub	sp, #24
 80002a2:	af00      	add	r7, sp, #0
 80002a4:	60f8      	str	r0, [r7, #12]
 80002a6:	60b9      	str	r1, [r7, #8]
 80002a8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002aa:	2300      	movs	r3, #0
 80002ac:	617b      	str	r3, [r7, #20]
 80002ae:	e009      	b.n	80002c4 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80002b0:	68bb      	ldr	r3, [r7, #8]
 80002b2:	1c5a      	adds	r2, r3, #1
 80002b4:	60ba      	str	r2, [r7, #8]
 80002b6:	781b      	ldrb	r3, [r3, #0]
 80002b8:	4618      	mov	r0, r3
 80002ba:	f7ff ffad 	bl	8000218 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002be:	697b      	ldr	r3, [r7, #20]
 80002c0:	3301      	adds	r3, #1
 80002c2:	617b      	str	r3, [r7, #20]
 80002c4:	697a      	ldr	r2, [r7, #20]
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	429a      	cmp	r2, r3
 80002ca:	dbf1      	blt.n	80002b0 <_write+0x12>
	}
	return len;
 80002cc:	687b      	ldr	r3, [r7, #4]
}
 80002ce:	4618      	mov	r0, r3
 80002d0:	3718      	adds	r7, #24
 80002d2:	46bd      	mov	sp, r7
 80002d4:	bd80      	pop	{r7, pc}

080002d6 <_close>:

int _close(int file)
{
 80002d6:	b480      	push	{r7}
 80002d8:	b083      	sub	sp, #12
 80002da:	af00      	add	r7, sp, #0
 80002dc:	6078      	str	r0, [r7, #4]
	return -1;
 80002de:	f04f 33ff 	mov.w	r3, #4294967295
}
 80002e2:	4618      	mov	r0, r3
 80002e4:	370c      	adds	r7, #12
 80002e6:	46bd      	mov	sp, r7
 80002e8:	bc80      	pop	{r7}
 80002ea:	4770      	bx	lr

080002ec <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002ec:	b480      	push	{r7}
 80002ee:	b083      	sub	sp, #12
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	6078      	str	r0, [r7, #4]
 80002f4:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80002f6:	683b      	ldr	r3, [r7, #0]
 80002f8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002fc:	605a      	str	r2, [r3, #4]
	return 0;
 80002fe:	2300      	movs	r3, #0
}
 8000300:	4618      	mov	r0, r3
 8000302:	370c      	adds	r7, #12
 8000304:	46bd      	mov	sp, r7
 8000306:	bc80      	pop	{r7}
 8000308:	4770      	bx	lr

0800030a <_isatty>:

int _isatty(int file)
{
 800030a:	b480      	push	{r7}
 800030c:	b083      	sub	sp, #12
 800030e:	af00      	add	r7, sp, #0
 8000310:	6078      	str	r0, [r7, #4]
	return 1;
 8000312:	2301      	movs	r3, #1
}
 8000314:	4618      	mov	r0, r3
 8000316:	370c      	adds	r7, #12
 8000318:	46bd      	mov	sp, r7
 800031a:	bc80      	pop	{r7}
 800031c:	4770      	bx	lr

0800031e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800031e:	b480      	push	{r7}
 8000320:	b085      	sub	sp, #20
 8000322:	af00      	add	r7, sp, #0
 8000324:	60f8      	str	r0, [r7, #12]
 8000326:	60b9      	str	r1, [r7, #8]
 8000328:	607a      	str	r2, [r7, #4]
	return 0;
 800032a:	2300      	movs	r3, #0
}
 800032c:	4618      	mov	r0, r3
 800032e:	3714      	adds	r7, #20
 8000330:	46bd      	mov	sp, r7
 8000332:	bc80      	pop	{r7}
 8000334:	4770      	bx	lr
	...

08000338 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000338:	b580      	push	{r7, lr}
 800033a:	b086      	sub	sp, #24
 800033c:	af00      	add	r7, sp, #0
 800033e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000340:	4a14      	ldr	r2, [pc, #80]	; (8000394 <_sbrk+0x5c>)
 8000342:	4b15      	ldr	r3, [pc, #84]	; (8000398 <_sbrk+0x60>)
 8000344:	1ad3      	subs	r3, r2, r3
 8000346:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000348:	697b      	ldr	r3, [r7, #20]
 800034a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800034c:	4b13      	ldr	r3, [pc, #76]	; (800039c <_sbrk+0x64>)
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	2b00      	cmp	r3, #0
 8000352:	d102      	bne.n	800035a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000354:	4b11      	ldr	r3, [pc, #68]	; (800039c <_sbrk+0x64>)
 8000356:	4a12      	ldr	r2, [pc, #72]	; (80003a0 <_sbrk+0x68>)
 8000358:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800035a:	4b10      	ldr	r3, [pc, #64]	; (800039c <_sbrk+0x64>)
 800035c:	681a      	ldr	r2, [r3, #0]
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4413      	add	r3, r2
 8000362:	693a      	ldr	r2, [r7, #16]
 8000364:	429a      	cmp	r2, r3
 8000366:	d207      	bcs.n	8000378 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000368:	f000 f846 	bl	80003f8 <__errno>
 800036c:	4603      	mov	r3, r0
 800036e:	220c      	movs	r2, #12
 8000370:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000372:	f04f 33ff 	mov.w	r3, #4294967295
 8000376:	e009      	b.n	800038c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000378:	4b08      	ldr	r3, [pc, #32]	; (800039c <_sbrk+0x64>)
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800037e:	4b07      	ldr	r3, [pc, #28]	; (800039c <_sbrk+0x64>)
 8000380:	681a      	ldr	r2, [r3, #0]
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4413      	add	r3, r2
 8000386:	4a05      	ldr	r2, [pc, #20]	; (800039c <_sbrk+0x64>)
 8000388:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800038a:	68fb      	ldr	r3, [r7, #12]
}
 800038c:	4618      	mov	r0, r3
 800038e:	3718      	adds	r7, #24
 8000390:	46bd      	mov	sp, r7
 8000392:	bd80      	pop	{r7, pc}
 8000394:	20020000 	.word	0x20020000
 8000398:	00000400 	.word	0x00000400
 800039c:	20000080 	.word	0x20000080
 80003a0:	20000098 	.word	0x20000098

080003a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003a4:	480d      	ldr	r0, [pc, #52]	; (80003dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003a6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003a8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003ac:	480c      	ldr	r0, [pc, #48]	; (80003e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80003ae:	490d      	ldr	r1, [pc, #52]	; (80003e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003b0:	4a0d      	ldr	r2, [pc, #52]	; (80003e8 <LoopForever+0xe>)
  movs r3, #0
 80003b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003b4:	e002      	b.n	80003bc <LoopCopyDataInit>

080003b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003ba:	3304      	adds	r3, #4

080003bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003c0:	d3f9      	bcc.n	80003b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003c2:	4a0a      	ldr	r2, [pc, #40]	; (80003ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80003c4:	4c0a      	ldr	r4, [pc, #40]	; (80003f0 <LoopForever+0x16>)
  movs r3, #0
 80003c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003c8:	e001      	b.n	80003ce <LoopFillZerobss>

080003ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003cc:	3204      	adds	r2, #4

080003ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003d0:	d3fb      	bcc.n	80003ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003d2:	f000 f829 	bl	8000428 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003d6:	f7ff ff07 	bl	80001e8 <main>

080003da <LoopForever>:

LoopForever:
    b LoopForever
 80003da:	e7fe      	b.n	80003da <LoopForever>
  ldr   r0, =_estack
 80003dc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003e4:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80003e8:	0800115c 	.word	0x0800115c
  ldr r2, =_sbss
 80003ec:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80003f0:	20000094 	.word	0x20000094

080003f4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003f4:	e7fe      	b.n	80003f4 <ADC_IRQHandler>
	...

080003f8 <__errno>:
 80003f8:	4b01      	ldr	r3, [pc, #4]	; (8000400 <__errno+0x8>)
 80003fa:	6818      	ldr	r0, [r3, #0]
 80003fc:	4770      	bx	lr
 80003fe:	bf00      	nop
 8000400:	20000000 	.word	0x20000000

08000404 <getchar>:
 8000404:	4b07      	ldr	r3, [pc, #28]	; (8000424 <getchar+0x20>)
 8000406:	b510      	push	{r4, lr}
 8000408:	681c      	ldr	r4, [r3, #0]
 800040a:	b124      	cbz	r4, 8000416 <getchar+0x12>
 800040c:	69a3      	ldr	r3, [r4, #24]
 800040e:	b913      	cbnz	r3, 8000416 <getchar+0x12>
 8000410:	4620      	mov	r0, r4
 8000412:	f000 fa93 	bl	800093c <__sinit>
 8000416:	6861      	ldr	r1, [r4, #4]
 8000418:	4620      	mov	r0, r4
 800041a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800041e:	f000 bb47 	b.w	8000ab0 <_getc_r>
 8000422:	bf00      	nop
 8000424:	20000000 	.word	0x20000000

08000428 <__libc_init_array>:
 8000428:	b570      	push	{r4, r5, r6, lr}
 800042a:	4d0d      	ldr	r5, [pc, #52]	; (8000460 <__libc_init_array+0x38>)
 800042c:	4c0d      	ldr	r4, [pc, #52]	; (8000464 <__libc_init_array+0x3c>)
 800042e:	1b64      	subs	r4, r4, r5
 8000430:	10a4      	asrs	r4, r4, #2
 8000432:	2600      	movs	r6, #0
 8000434:	42a6      	cmp	r6, r4
 8000436:	d109      	bne.n	800044c <__libc_init_array+0x24>
 8000438:	4d0b      	ldr	r5, [pc, #44]	; (8000468 <__libc_init_array+0x40>)
 800043a:	4c0c      	ldr	r4, [pc, #48]	; (800046c <__libc_init_array+0x44>)
 800043c:	f000 fe46 	bl	80010cc <_init>
 8000440:	1b64      	subs	r4, r4, r5
 8000442:	10a4      	asrs	r4, r4, #2
 8000444:	2600      	movs	r6, #0
 8000446:	42a6      	cmp	r6, r4
 8000448:	d105      	bne.n	8000456 <__libc_init_array+0x2e>
 800044a:	bd70      	pop	{r4, r5, r6, pc}
 800044c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000450:	4798      	blx	r3
 8000452:	3601      	adds	r6, #1
 8000454:	e7ee      	b.n	8000434 <__libc_init_array+0xc>
 8000456:	f855 3b04 	ldr.w	r3, [r5], #4
 800045a:	4798      	blx	r3
 800045c:	3601      	adds	r6, #1
 800045e:	e7f2      	b.n	8000446 <__libc_init_array+0x1e>
 8000460:	08001154 	.word	0x08001154
 8000464:	08001154 	.word	0x08001154
 8000468:	08001154 	.word	0x08001154
 800046c:	08001158 	.word	0x08001158

08000470 <memset>:
 8000470:	4402      	add	r2, r0
 8000472:	4603      	mov	r3, r0
 8000474:	4293      	cmp	r3, r2
 8000476:	d100      	bne.n	800047a <memset+0xa>
 8000478:	4770      	bx	lr
 800047a:	f803 1b01 	strb.w	r1, [r3], #1
 800047e:	e7f9      	b.n	8000474 <memset+0x4>

08000480 <_puts_r>:
 8000480:	b570      	push	{r4, r5, r6, lr}
 8000482:	460e      	mov	r6, r1
 8000484:	4605      	mov	r5, r0
 8000486:	b118      	cbz	r0, 8000490 <_puts_r+0x10>
 8000488:	6983      	ldr	r3, [r0, #24]
 800048a:	b90b      	cbnz	r3, 8000490 <_puts_r+0x10>
 800048c:	f000 fa56 	bl	800093c <__sinit>
 8000490:	69ab      	ldr	r3, [r5, #24]
 8000492:	68ac      	ldr	r4, [r5, #8]
 8000494:	b913      	cbnz	r3, 800049c <_puts_r+0x1c>
 8000496:	4628      	mov	r0, r5
 8000498:	f000 fa50 	bl	800093c <__sinit>
 800049c:	4b2c      	ldr	r3, [pc, #176]	; (8000550 <_puts_r+0xd0>)
 800049e:	429c      	cmp	r4, r3
 80004a0:	d120      	bne.n	80004e4 <_puts_r+0x64>
 80004a2:	686c      	ldr	r4, [r5, #4]
 80004a4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80004a6:	07db      	lsls	r3, r3, #31
 80004a8:	d405      	bmi.n	80004b6 <_puts_r+0x36>
 80004aa:	89a3      	ldrh	r3, [r4, #12]
 80004ac:	0598      	lsls	r0, r3, #22
 80004ae:	d402      	bmi.n	80004b6 <_puts_r+0x36>
 80004b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80004b2:	f000 fb3e 	bl	8000b32 <__retarget_lock_acquire_recursive>
 80004b6:	89a3      	ldrh	r3, [r4, #12]
 80004b8:	0719      	lsls	r1, r3, #28
 80004ba:	d51d      	bpl.n	80004f8 <_puts_r+0x78>
 80004bc:	6923      	ldr	r3, [r4, #16]
 80004be:	b1db      	cbz	r3, 80004f8 <_puts_r+0x78>
 80004c0:	3e01      	subs	r6, #1
 80004c2:	68a3      	ldr	r3, [r4, #8]
 80004c4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80004c8:	3b01      	subs	r3, #1
 80004ca:	60a3      	str	r3, [r4, #8]
 80004cc:	bb39      	cbnz	r1, 800051e <_puts_r+0x9e>
 80004ce:	2b00      	cmp	r3, #0
 80004d0:	da38      	bge.n	8000544 <_puts_r+0xc4>
 80004d2:	4622      	mov	r2, r4
 80004d4:	210a      	movs	r1, #10
 80004d6:	4628      	mov	r0, r5
 80004d8:	f000 f848 	bl	800056c <__swbuf_r>
 80004dc:	3001      	adds	r0, #1
 80004de:	d011      	beq.n	8000504 <_puts_r+0x84>
 80004e0:	250a      	movs	r5, #10
 80004e2:	e011      	b.n	8000508 <_puts_r+0x88>
 80004e4:	4b1b      	ldr	r3, [pc, #108]	; (8000554 <_puts_r+0xd4>)
 80004e6:	429c      	cmp	r4, r3
 80004e8:	d101      	bne.n	80004ee <_puts_r+0x6e>
 80004ea:	68ac      	ldr	r4, [r5, #8]
 80004ec:	e7da      	b.n	80004a4 <_puts_r+0x24>
 80004ee:	4b1a      	ldr	r3, [pc, #104]	; (8000558 <_puts_r+0xd8>)
 80004f0:	429c      	cmp	r4, r3
 80004f2:	bf08      	it	eq
 80004f4:	68ec      	ldreq	r4, [r5, #12]
 80004f6:	e7d5      	b.n	80004a4 <_puts_r+0x24>
 80004f8:	4621      	mov	r1, r4
 80004fa:	4628      	mov	r0, r5
 80004fc:	f000 f888 	bl	8000610 <__swsetup_r>
 8000500:	2800      	cmp	r0, #0
 8000502:	d0dd      	beq.n	80004c0 <_puts_r+0x40>
 8000504:	f04f 35ff 	mov.w	r5, #4294967295
 8000508:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800050a:	07da      	lsls	r2, r3, #31
 800050c:	d405      	bmi.n	800051a <_puts_r+0x9a>
 800050e:	89a3      	ldrh	r3, [r4, #12]
 8000510:	059b      	lsls	r3, r3, #22
 8000512:	d402      	bmi.n	800051a <_puts_r+0x9a>
 8000514:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000516:	f000 fb0d 	bl	8000b34 <__retarget_lock_release_recursive>
 800051a:	4628      	mov	r0, r5
 800051c:	bd70      	pop	{r4, r5, r6, pc}
 800051e:	2b00      	cmp	r3, #0
 8000520:	da04      	bge.n	800052c <_puts_r+0xac>
 8000522:	69a2      	ldr	r2, [r4, #24]
 8000524:	429a      	cmp	r2, r3
 8000526:	dc06      	bgt.n	8000536 <_puts_r+0xb6>
 8000528:	290a      	cmp	r1, #10
 800052a:	d004      	beq.n	8000536 <_puts_r+0xb6>
 800052c:	6823      	ldr	r3, [r4, #0]
 800052e:	1c5a      	adds	r2, r3, #1
 8000530:	6022      	str	r2, [r4, #0]
 8000532:	7019      	strb	r1, [r3, #0]
 8000534:	e7c5      	b.n	80004c2 <_puts_r+0x42>
 8000536:	4622      	mov	r2, r4
 8000538:	4628      	mov	r0, r5
 800053a:	f000 f817 	bl	800056c <__swbuf_r>
 800053e:	3001      	adds	r0, #1
 8000540:	d1bf      	bne.n	80004c2 <_puts_r+0x42>
 8000542:	e7df      	b.n	8000504 <_puts_r+0x84>
 8000544:	6823      	ldr	r3, [r4, #0]
 8000546:	250a      	movs	r5, #10
 8000548:	1c5a      	adds	r2, r3, #1
 800054a:	6022      	str	r2, [r4, #0]
 800054c:	701d      	strb	r5, [r3, #0]
 800054e:	e7db      	b.n	8000508 <_puts_r+0x88>
 8000550:	08001114 	.word	0x08001114
 8000554:	08001134 	.word	0x08001134
 8000558:	080010f4 	.word	0x080010f4

0800055c <puts>:
 800055c:	4b02      	ldr	r3, [pc, #8]	; (8000568 <puts+0xc>)
 800055e:	4601      	mov	r1, r0
 8000560:	6818      	ldr	r0, [r3, #0]
 8000562:	f7ff bf8d 	b.w	8000480 <_puts_r>
 8000566:	bf00      	nop
 8000568:	20000000 	.word	0x20000000

0800056c <__swbuf_r>:
 800056c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800056e:	460e      	mov	r6, r1
 8000570:	4614      	mov	r4, r2
 8000572:	4605      	mov	r5, r0
 8000574:	b118      	cbz	r0, 800057e <__swbuf_r+0x12>
 8000576:	6983      	ldr	r3, [r0, #24]
 8000578:	b90b      	cbnz	r3, 800057e <__swbuf_r+0x12>
 800057a:	f000 f9df 	bl	800093c <__sinit>
 800057e:	4b21      	ldr	r3, [pc, #132]	; (8000604 <__swbuf_r+0x98>)
 8000580:	429c      	cmp	r4, r3
 8000582:	d12b      	bne.n	80005dc <__swbuf_r+0x70>
 8000584:	686c      	ldr	r4, [r5, #4]
 8000586:	69a3      	ldr	r3, [r4, #24]
 8000588:	60a3      	str	r3, [r4, #8]
 800058a:	89a3      	ldrh	r3, [r4, #12]
 800058c:	071a      	lsls	r2, r3, #28
 800058e:	d52f      	bpl.n	80005f0 <__swbuf_r+0x84>
 8000590:	6923      	ldr	r3, [r4, #16]
 8000592:	b36b      	cbz	r3, 80005f0 <__swbuf_r+0x84>
 8000594:	6923      	ldr	r3, [r4, #16]
 8000596:	6820      	ldr	r0, [r4, #0]
 8000598:	1ac0      	subs	r0, r0, r3
 800059a:	6963      	ldr	r3, [r4, #20]
 800059c:	b2f6      	uxtb	r6, r6
 800059e:	4283      	cmp	r3, r0
 80005a0:	4637      	mov	r7, r6
 80005a2:	dc04      	bgt.n	80005ae <__swbuf_r+0x42>
 80005a4:	4621      	mov	r1, r4
 80005a6:	4628      	mov	r0, r5
 80005a8:	f000 f922 	bl	80007f0 <_fflush_r>
 80005ac:	bb30      	cbnz	r0, 80005fc <__swbuf_r+0x90>
 80005ae:	68a3      	ldr	r3, [r4, #8]
 80005b0:	3b01      	subs	r3, #1
 80005b2:	60a3      	str	r3, [r4, #8]
 80005b4:	6823      	ldr	r3, [r4, #0]
 80005b6:	1c5a      	adds	r2, r3, #1
 80005b8:	6022      	str	r2, [r4, #0]
 80005ba:	701e      	strb	r6, [r3, #0]
 80005bc:	6963      	ldr	r3, [r4, #20]
 80005be:	3001      	adds	r0, #1
 80005c0:	4283      	cmp	r3, r0
 80005c2:	d004      	beq.n	80005ce <__swbuf_r+0x62>
 80005c4:	89a3      	ldrh	r3, [r4, #12]
 80005c6:	07db      	lsls	r3, r3, #31
 80005c8:	d506      	bpl.n	80005d8 <__swbuf_r+0x6c>
 80005ca:	2e0a      	cmp	r6, #10
 80005cc:	d104      	bne.n	80005d8 <__swbuf_r+0x6c>
 80005ce:	4621      	mov	r1, r4
 80005d0:	4628      	mov	r0, r5
 80005d2:	f000 f90d 	bl	80007f0 <_fflush_r>
 80005d6:	b988      	cbnz	r0, 80005fc <__swbuf_r+0x90>
 80005d8:	4638      	mov	r0, r7
 80005da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005dc:	4b0a      	ldr	r3, [pc, #40]	; (8000608 <__swbuf_r+0x9c>)
 80005de:	429c      	cmp	r4, r3
 80005e0:	d101      	bne.n	80005e6 <__swbuf_r+0x7a>
 80005e2:	68ac      	ldr	r4, [r5, #8]
 80005e4:	e7cf      	b.n	8000586 <__swbuf_r+0x1a>
 80005e6:	4b09      	ldr	r3, [pc, #36]	; (800060c <__swbuf_r+0xa0>)
 80005e8:	429c      	cmp	r4, r3
 80005ea:	bf08      	it	eq
 80005ec:	68ec      	ldreq	r4, [r5, #12]
 80005ee:	e7ca      	b.n	8000586 <__swbuf_r+0x1a>
 80005f0:	4621      	mov	r1, r4
 80005f2:	4628      	mov	r0, r5
 80005f4:	f000 f80c 	bl	8000610 <__swsetup_r>
 80005f8:	2800      	cmp	r0, #0
 80005fa:	d0cb      	beq.n	8000594 <__swbuf_r+0x28>
 80005fc:	f04f 37ff 	mov.w	r7, #4294967295
 8000600:	e7ea      	b.n	80005d8 <__swbuf_r+0x6c>
 8000602:	bf00      	nop
 8000604:	08001114 	.word	0x08001114
 8000608:	08001134 	.word	0x08001134
 800060c:	080010f4 	.word	0x080010f4

08000610 <__swsetup_r>:
 8000610:	4b32      	ldr	r3, [pc, #200]	; (80006dc <__swsetup_r+0xcc>)
 8000612:	b570      	push	{r4, r5, r6, lr}
 8000614:	681d      	ldr	r5, [r3, #0]
 8000616:	4606      	mov	r6, r0
 8000618:	460c      	mov	r4, r1
 800061a:	b125      	cbz	r5, 8000626 <__swsetup_r+0x16>
 800061c:	69ab      	ldr	r3, [r5, #24]
 800061e:	b913      	cbnz	r3, 8000626 <__swsetup_r+0x16>
 8000620:	4628      	mov	r0, r5
 8000622:	f000 f98b 	bl	800093c <__sinit>
 8000626:	4b2e      	ldr	r3, [pc, #184]	; (80006e0 <__swsetup_r+0xd0>)
 8000628:	429c      	cmp	r4, r3
 800062a:	d10f      	bne.n	800064c <__swsetup_r+0x3c>
 800062c:	686c      	ldr	r4, [r5, #4]
 800062e:	89a3      	ldrh	r3, [r4, #12]
 8000630:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000634:	0719      	lsls	r1, r3, #28
 8000636:	d42c      	bmi.n	8000692 <__swsetup_r+0x82>
 8000638:	06dd      	lsls	r5, r3, #27
 800063a:	d411      	bmi.n	8000660 <__swsetup_r+0x50>
 800063c:	2309      	movs	r3, #9
 800063e:	6033      	str	r3, [r6, #0]
 8000640:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000644:	81a3      	strh	r3, [r4, #12]
 8000646:	f04f 30ff 	mov.w	r0, #4294967295
 800064a:	e03e      	b.n	80006ca <__swsetup_r+0xba>
 800064c:	4b25      	ldr	r3, [pc, #148]	; (80006e4 <__swsetup_r+0xd4>)
 800064e:	429c      	cmp	r4, r3
 8000650:	d101      	bne.n	8000656 <__swsetup_r+0x46>
 8000652:	68ac      	ldr	r4, [r5, #8]
 8000654:	e7eb      	b.n	800062e <__swsetup_r+0x1e>
 8000656:	4b24      	ldr	r3, [pc, #144]	; (80006e8 <__swsetup_r+0xd8>)
 8000658:	429c      	cmp	r4, r3
 800065a:	bf08      	it	eq
 800065c:	68ec      	ldreq	r4, [r5, #12]
 800065e:	e7e6      	b.n	800062e <__swsetup_r+0x1e>
 8000660:	0758      	lsls	r0, r3, #29
 8000662:	d512      	bpl.n	800068a <__swsetup_r+0x7a>
 8000664:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000666:	b141      	cbz	r1, 800067a <__swsetup_r+0x6a>
 8000668:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800066c:	4299      	cmp	r1, r3
 800066e:	d002      	beq.n	8000676 <__swsetup_r+0x66>
 8000670:	4630      	mov	r0, r6
 8000672:	f000 fac5 	bl	8000c00 <_free_r>
 8000676:	2300      	movs	r3, #0
 8000678:	6363      	str	r3, [r4, #52]	; 0x34
 800067a:	89a3      	ldrh	r3, [r4, #12]
 800067c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000680:	81a3      	strh	r3, [r4, #12]
 8000682:	2300      	movs	r3, #0
 8000684:	6063      	str	r3, [r4, #4]
 8000686:	6923      	ldr	r3, [r4, #16]
 8000688:	6023      	str	r3, [r4, #0]
 800068a:	89a3      	ldrh	r3, [r4, #12]
 800068c:	f043 0308 	orr.w	r3, r3, #8
 8000690:	81a3      	strh	r3, [r4, #12]
 8000692:	6923      	ldr	r3, [r4, #16]
 8000694:	b94b      	cbnz	r3, 80006aa <__swsetup_r+0x9a>
 8000696:	89a3      	ldrh	r3, [r4, #12]
 8000698:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800069c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80006a0:	d003      	beq.n	80006aa <__swsetup_r+0x9a>
 80006a2:	4621      	mov	r1, r4
 80006a4:	4630      	mov	r0, r6
 80006a6:	f000 fa6b 	bl	8000b80 <__smakebuf_r>
 80006aa:	89a0      	ldrh	r0, [r4, #12]
 80006ac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006b0:	f010 0301 	ands.w	r3, r0, #1
 80006b4:	d00a      	beq.n	80006cc <__swsetup_r+0xbc>
 80006b6:	2300      	movs	r3, #0
 80006b8:	60a3      	str	r3, [r4, #8]
 80006ba:	6963      	ldr	r3, [r4, #20]
 80006bc:	425b      	negs	r3, r3
 80006be:	61a3      	str	r3, [r4, #24]
 80006c0:	6923      	ldr	r3, [r4, #16]
 80006c2:	b943      	cbnz	r3, 80006d6 <__swsetup_r+0xc6>
 80006c4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80006c8:	d1ba      	bne.n	8000640 <__swsetup_r+0x30>
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	0781      	lsls	r1, r0, #30
 80006ce:	bf58      	it	pl
 80006d0:	6963      	ldrpl	r3, [r4, #20]
 80006d2:	60a3      	str	r3, [r4, #8]
 80006d4:	e7f4      	b.n	80006c0 <__swsetup_r+0xb0>
 80006d6:	2000      	movs	r0, #0
 80006d8:	e7f7      	b.n	80006ca <__swsetup_r+0xba>
 80006da:	bf00      	nop
 80006dc:	20000000 	.word	0x20000000
 80006e0:	08001114 	.word	0x08001114
 80006e4:	08001134 	.word	0x08001134
 80006e8:	080010f4 	.word	0x080010f4

080006ec <__sflush_r>:
 80006ec:	898a      	ldrh	r2, [r1, #12]
 80006ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006f0:	4605      	mov	r5, r0
 80006f2:	0710      	lsls	r0, r2, #28
 80006f4:	460c      	mov	r4, r1
 80006f6:	d457      	bmi.n	80007a8 <__sflush_r+0xbc>
 80006f8:	684b      	ldr	r3, [r1, #4]
 80006fa:	2b00      	cmp	r3, #0
 80006fc:	dc04      	bgt.n	8000708 <__sflush_r+0x1c>
 80006fe:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000700:	2b00      	cmp	r3, #0
 8000702:	dc01      	bgt.n	8000708 <__sflush_r+0x1c>
 8000704:	2000      	movs	r0, #0
 8000706:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000708:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800070a:	2e00      	cmp	r6, #0
 800070c:	d0fa      	beq.n	8000704 <__sflush_r+0x18>
 800070e:	2300      	movs	r3, #0
 8000710:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000714:	682f      	ldr	r7, [r5, #0]
 8000716:	602b      	str	r3, [r5, #0]
 8000718:	d032      	beq.n	8000780 <__sflush_r+0x94>
 800071a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800071c:	89a3      	ldrh	r3, [r4, #12]
 800071e:	075a      	lsls	r2, r3, #29
 8000720:	d505      	bpl.n	800072e <__sflush_r+0x42>
 8000722:	6863      	ldr	r3, [r4, #4]
 8000724:	1ac0      	subs	r0, r0, r3
 8000726:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000728:	b10b      	cbz	r3, 800072e <__sflush_r+0x42>
 800072a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800072c:	1ac0      	subs	r0, r0, r3
 800072e:	2300      	movs	r3, #0
 8000730:	4602      	mov	r2, r0
 8000732:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000734:	6a21      	ldr	r1, [r4, #32]
 8000736:	4628      	mov	r0, r5
 8000738:	47b0      	blx	r6
 800073a:	1c43      	adds	r3, r0, #1
 800073c:	89a3      	ldrh	r3, [r4, #12]
 800073e:	d106      	bne.n	800074e <__sflush_r+0x62>
 8000740:	6829      	ldr	r1, [r5, #0]
 8000742:	291d      	cmp	r1, #29
 8000744:	d82c      	bhi.n	80007a0 <__sflush_r+0xb4>
 8000746:	4a29      	ldr	r2, [pc, #164]	; (80007ec <__sflush_r+0x100>)
 8000748:	40ca      	lsrs	r2, r1
 800074a:	07d6      	lsls	r6, r2, #31
 800074c:	d528      	bpl.n	80007a0 <__sflush_r+0xb4>
 800074e:	2200      	movs	r2, #0
 8000750:	6062      	str	r2, [r4, #4]
 8000752:	04d9      	lsls	r1, r3, #19
 8000754:	6922      	ldr	r2, [r4, #16]
 8000756:	6022      	str	r2, [r4, #0]
 8000758:	d504      	bpl.n	8000764 <__sflush_r+0x78>
 800075a:	1c42      	adds	r2, r0, #1
 800075c:	d101      	bne.n	8000762 <__sflush_r+0x76>
 800075e:	682b      	ldr	r3, [r5, #0]
 8000760:	b903      	cbnz	r3, 8000764 <__sflush_r+0x78>
 8000762:	6560      	str	r0, [r4, #84]	; 0x54
 8000764:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000766:	602f      	str	r7, [r5, #0]
 8000768:	2900      	cmp	r1, #0
 800076a:	d0cb      	beq.n	8000704 <__sflush_r+0x18>
 800076c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000770:	4299      	cmp	r1, r3
 8000772:	d002      	beq.n	800077a <__sflush_r+0x8e>
 8000774:	4628      	mov	r0, r5
 8000776:	f000 fa43 	bl	8000c00 <_free_r>
 800077a:	2000      	movs	r0, #0
 800077c:	6360      	str	r0, [r4, #52]	; 0x34
 800077e:	e7c2      	b.n	8000706 <__sflush_r+0x1a>
 8000780:	6a21      	ldr	r1, [r4, #32]
 8000782:	2301      	movs	r3, #1
 8000784:	4628      	mov	r0, r5
 8000786:	47b0      	blx	r6
 8000788:	1c41      	adds	r1, r0, #1
 800078a:	d1c7      	bne.n	800071c <__sflush_r+0x30>
 800078c:	682b      	ldr	r3, [r5, #0]
 800078e:	2b00      	cmp	r3, #0
 8000790:	d0c4      	beq.n	800071c <__sflush_r+0x30>
 8000792:	2b1d      	cmp	r3, #29
 8000794:	d001      	beq.n	800079a <__sflush_r+0xae>
 8000796:	2b16      	cmp	r3, #22
 8000798:	d101      	bne.n	800079e <__sflush_r+0xb2>
 800079a:	602f      	str	r7, [r5, #0]
 800079c:	e7b2      	b.n	8000704 <__sflush_r+0x18>
 800079e:	89a3      	ldrh	r3, [r4, #12]
 80007a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007a4:	81a3      	strh	r3, [r4, #12]
 80007a6:	e7ae      	b.n	8000706 <__sflush_r+0x1a>
 80007a8:	690f      	ldr	r7, [r1, #16]
 80007aa:	2f00      	cmp	r7, #0
 80007ac:	d0aa      	beq.n	8000704 <__sflush_r+0x18>
 80007ae:	0793      	lsls	r3, r2, #30
 80007b0:	680e      	ldr	r6, [r1, #0]
 80007b2:	bf08      	it	eq
 80007b4:	694b      	ldreq	r3, [r1, #20]
 80007b6:	600f      	str	r7, [r1, #0]
 80007b8:	bf18      	it	ne
 80007ba:	2300      	movne	r3, #0
 80007bc:	1bf6      	subs	r6, r6, r7
 80007be:	608b      	str	r3, [r1, #8]
 80007c0:	2e00      	cmp	r6, #0
 80007c2:	dd9f      	ble.n	8000704 <__sflush_r+0x18>
 80007c4:	6a21      	ldr	r1, [r4, #32]
 80007c6:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 80007ca:	4633      	mov	r3, r6
 80007cc:	463a      	mov	r2, r7
 80007ce:	4628      	mov	r0, r5
 80007d0:	47e0      	blx	ip
 80007d2:	2800      	cmp	r0, #0
 80007d4:	dc06      	bgt.n	80007e4 <__sflush_r+0xf8>
 80007d6:	89a3      	ldrh	r3, [r4, #12]
 80007d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007dc:	81a3      	strh	r3, [r4, #12]
 80007de:	f04f 30ff 	mov.w	r0, #4294967295
 80007e2:	e790      	b.n	8000706 <__sflush_r+0x1a>
 80007e4:	4407      	add	r7, r0
 80007e6:	1a36      	subs	r6, r6, r0
 80007e8:	e7ea      	b.n	80007c0 <__sflush_r+0xd4>
 80007ea:	bf00      	nop
 80007ec:	20400001 	.word	0x20400001

080007f0 <_fflush_r>:
 80007f0:	b538      	push	{r3, r4, r5, lr}
 80007f2:	690b      	ldr	r3, [r1, #16]
 80007f4:	4605      	mov	r5, r0
 80007f6:	460c      	mov	r4, r1
 80007f8:	b913      	cbnz	r3, 8000800 <_fflush_r+0x10>
 80007fa:	2500      	movs	r5, #0
 80007fc:	4628      	mov	r0, r5
 80007fe:	bd38      	pop	{r3, r4, r5, pc}
 8000800:	b118      	cbz	r0, 800080a <_fflush_r+0x1a>
 8000802:	6983      	ldr	r3, [r0, #24]
 8000804:	b90b      	cbnz	r3, 800080a <_fflush_r+0x1a>
 8000806:	f000 f899 	bl	800093c <__sinit>
 800080a:	4b14      	ldr	r3, [pc, #80]	; (800085c <_fflush_r+0x6c>)
 800080c:	429c      	cmp	r4, r3
 800080e:	d11b      	bne.n	8000848 <_fflush_r+0x58>
 8000810:	686c      	ldr	r4, [r5, #4]
 8000812:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000816:	2b00      	cmp	r3, #0
 8000818:	d0ef      	beq.n	80007fa <_fflush_r+0xa>
 800081a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800081c:	07d0      	lsls	r0, r2, #31
 800081e:	d404      	bmi.n	800082a <_fflush_r+0x3a>
 8000820:	0599      	lsls	r1, r3, #22
 8000822:	d402      	bmi.n	800082a <_fflush_r+0x3a>
 8000824:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000826:	f000 f984 	bl	8000b32 <__retarget_lock_acquire_recursive>
 800082a:	4628      	mov	r0, r5
 800082c:	4621      	mov	r1, r4
 800082e:	f7ff ff5d 	bl	80006ec <__sflush_r>
 8000832:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000834:	07da      	lsls	r2, r3, #31
 8000836:	4605      	mov	r5, r0
 8000838:	d4e0      	bmi.n	80007fc <_fflush_r+0xc>
 800083a:	89a3      	ldrh	r3, [r4, #12]
 800083c:	059b      	lsls	r3, r3, #22
 800083e:	d4dd      	bmi.n	80007fc <_fflush_r+0xc>
 8000840:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000842:	f000 f977 	bl	8000b34 <__retarget_lock_release_recursive>
 8000846:	e7d9      	b.n	80007fc <_fflush_r+0xc>
 8000848:	4b05      	ldr	r3, [pc, #20]	; (8000860 <_fflush_r+0x70>)
 800084a:	429c      	cmp	r4, r3
 800084c:	d101      	bne.n	8000852 <_fflush_r+0x62>
 800084e:	68ac      	ldr	r4, [r5, #8]
 8000850:	e7df      	b.n	8000812 <_fflush_r+0x22>
 8000852:	4b04      	ldr	r3, [pc, #16]	; (8000864 <_fflush_r+0x74>)
 8000854:	429c      	cmp	r4, r3
 8000856:	bf08      	it	eq
 8000858:	68ec      	ldreq	r4, [r5, #12]
 800085a:	e7da      	b.n	8000812 <_fflush_r+0x22>
 800085c:	08001114 	.word	0x08001114
 8000860:	08001134 	.word	0x08001134
 8000864:	080010f4 	.word	0x080010f4

08000868 <fflush>:
 8000868:	4601      	mov	r1, r0
 800086a:	b920      	cbnz	r0, 8000876 <fflush+0xe>
 800086c:	4b04      	ldr	r3, [pc, #16]	; (8000880 <fflush+0x18>)
 800086e:	4905      	ldr	r1, [pc, #20]	; (8000884 <fflush+0x1c>)
 8000870:	6818      	ldr	r0, [r3, #0]
 8000872:	f000 b8fe 	b.w	8000a72 <_fwalk_reent>
 8000876:	4b04      	ldr	r3, [pc, #16]	; (8000888 <fflush+0x20>)
 8000878:	6818      	ldr	r0, [r3, #0]
 800087a:	f7ff bfb9 	b.w	80007f0 <_fflush_r>
 800087e:	bf00      	nop
 8000880:	080010f0 	.word	0x080010f0
 8000884:	080007f1 	.word	0x080007f1
 8000888:	20000000 	.word	0x20000000

0800088c <std>:
 800088c:	2300      	movs	r3, #0
 800088e:	b510      	push	{r4, lr}
 8000890:	4604      	mov	r4, r0
 8000892:	e9c0 3300 	strd	r3, r3, [r0]
 8000896:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800089a:	6083      	str	r3, [r0, #8]
 800089c:	8181      	strh	r1, [r0, #12]
 800089e:	6643      	str	r3, [r0, #100]	; 0x64
 80008a0:	81c2      	strh	r2, [r0, #14]
 80008a2:	6183      	str	r3, [r0, #24]
 80008a4:	4619      	mov	r1, r3
 80008a6:	2208      	movs	r2, #8
 80008a8:	305c      	adds	r0, #92	; 0x5c
 80008aa:	f7ff fde1 	bl	8000470 <memset>
 80008ae:	4b05      	ldr	r3, [pc, #20]	; (80008c4 <std+0x38>)
 80008b0:	6263      	str	r3, [r4, #36]	; 0x24
 80008b2:	4b05      	ldr	r3, [pc, #20]	; (80008c8 <std+0x3c>)
 80008b4:	62a3      	str	r3, [r4, #40]	; 0x28
 80008b6:	4b05      	ldr	r3, [pc, #20]	; (80008cc <std+0x40>)
 80008b8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80008ba:	4b05      	ldr	r3, [pc, #20]	; (80008d0 <std+0x44>)
 80008bc:	6224      	str	r4, [r4, #32]
 80008be:	6323      	str	r3, [r4, #48]	; 0x30
 80008c0:	bd10      	pop	{r4, pc}
 80008c2:	bf00      	nop
 80008c4:	08000e35 	.word	0x08000e35
 80008c8:	08000e57 	.word	0x08000e57
 80008cc:	08000e8f 	.word	0x08000e8f
 80008d0:	08000eb3 	.word	0x08000eb3

080008d4 <_cleanup_r>:
 80008d4:	4901      	ldr	r1, [pc, #4]	; (80008dc <_cleanup_r+0x8>)
 80008d6:	f000 b8cc 	b.w	8000a72 <_fwalk_reent>
 80008da:	bf00      	nop
 80008dc:	080007f1 	.word	0x080007f1

080008e0 <__sfmoreglue>:
 80008e0:	b570      	push	{r4, r5, r6, lr}
 80008e2:	2268      	movs	r2, #104	; 0x68
 80008e4:	1e4d      	subs	r5, r1, #1
 80008e6:	4355      	muls	r5, r2
 80008e8:	460e      	mov	r6, r1
 80008ea:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80008ee:	f000 f9f1 	bl	8000cd4 <_malloc_r>
 80008f2:	4604      	mov	r4, r0
 80008f4:	b140      	cbz	r0, 8000908 <__sfmoreglue+0x28>
 80008f6:	2100      	movs	r1, #0
 80008f8:	e9c0 1600 	strd	r1, r6, [r0]
 80008fc:	300c      	adds	r0, #12
 80008fe:	60a0      	str	r0, [r4, #8]
 8000900:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000904:	f7ff fdb4 	bl	8000470 <memset>
 8000908:	4620      	mov	r0, r4
 800090a:	bd70      	pop	{r4, r5, r6, pc}

0800090c <__sfp_lock_acquire>:
 800090c:	4801      	ldr	r0, [pc, #4]	; (8000914 <__sfp_lock_acquire+0x8>)
 800090e:	f000 b910 	b.w	8000b32 <__retarget_lock_acquire_recursive>
 8000912:	bf00      	nop
 8000914:	20000085 	.word	0x20000085

08000918 <__sfp_lock_release>:
 8000918:	4801      	ldr	r0, [pc, #4]	; (8000920 <__sfp_lock_release+0x8>)
 800091a:	f000 b90b 	b.w	8000b34 <__retarget_lock_release_recursive>
 800091e:	bf00      	nop
 8000920:	20000085 	.word	0x20000085

08000924 <__sinit_lock_acquire>:
 8000924:	4801      	ldr	r0, [pc, #4]	; (800092c <__sinit_lock_acquire+0x8>)
 8000926:	f000 b904 	b.w	8000b32 <__retarget_lock_acquire_recursive>
 800092a:	bf00      	nop
 800092c:	20000086 	.word	0x20000086

08000930 <__sinit_lock_release>:
 8000930:	4801      	ldr	r0, [pc, #4]	; (8000938 <__sinit_lock_release+0x8>)
 8000932:	f000 b8ff 	b.w	8000b34 <__retarget_lock_release_recursive>
 8000936:	bf00      	nop
 8000938:	20000086 	.word	0x20000086

0800093c <__sinit>:
 800093c:	b510      	push	{r4, lr}
 800093e:	4604      	mov	r4, r0
 8000940:	f7ff fff0 	bl	8000924 <__sinit_lock_acquire>
 8000944:	69a3      	ldr	r3, [r4, #24]
 8000946:	b11b      	cbz	r3, 8000950 <__sinit+0x14>
 8000948:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800094c:	f7ff bff0 	b.w	8000930 <__sinit_lock_release>
 8000950:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000954:	6523      	str	r3, [r4, #80]	; 0x50
 8000956:	4b13      	ldr	r3, [pc, #76]	; (80009a4 <__sinit+0x68>)
 8000958:	4a13      	ldr	r2, [pc, #76]	; (80009a8 <__sinit+0x6c>)
 800095a:	681b      	ldr	r3, [r3, #0]
 800095c:	62a2      	str	r2, [r4, #40]	; 0x28
 800095e:	42a3      	cmp	r3, r4
 8000960:	bf04      	itt	eq
 8000962:	2301      	moveq	r3, #1
 8000964:	61a3      	streq	r3, [r4, #24]
 8000966:	4620      	mov	r0, r4
 8000968:	f000 f820 	bl	80009ac <__sfp>
 800096c:	6060      	str	r0, [r4, #4]
 800096e:	4620      	mov	r0, r4
 8000970:	f000 f81c 	bl	80009ac <__sfp>
 8000974:	60a0      	str	r0, [r4, #8]
 8000976:	4620      	mov	r0, r4
 8000978:	f000 f818 	bl	80009ac <__sfp>
 800097c:	2200      	movs	r2, #0
 800097e:	60e0      	str	r0, [r4, #12]
 8000980:	2104      	movs	r1, #4
 8000982:	6860      	ldr	r0, [r4, #4]
 8000984:	f7ff ff82 	bl	800088c <std>
 8000988:	68a0      	ldr	r0, [r4, #8]
 800098a:	2201      	movs	r2, #1
 800098c:	2109      	movs	r1, #9
 800098e:	f7ff ff7d 	bl	800088c <std>
 8000992:	68e0      	ldr	r0, [r4, #12]
 8000994:	2202      	movs	r2, #2
 8000996:	2112      	movs	r1, #18
 8000998:	f7ff ff78 	bl	800088c <std>
 800099c:	2301      	movs	r3, #1
 800099e:	61a3      	str	r3, [r4, #24]
 80009a0:	e7d2      	b.n	8000948 <__sinit+0xc>
 80009a2:	bf00      	nop
 80009a4:	080010f0 	.word	0x080010f0
 80009a8:	080008d5 	.word	0x080008d5

080009ac <__sfp>:
 80009ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ae:	4607      	mov	r7, r0
 80009b0:	f7ff ffac 	bl	800090c <__sfp_lock_acquire>
 80009b4:	4b1e      	ldr	r3, [pc, #120]	; (8000a30 <__sfp+0x84>)
 80009b6:	681e      	ldr	r6, [r3, #0]
 80009b8:	69b3      	ldr	r3, [r6, #24]
 80009ba:	b913      	cbnz	r3, 80009c2 <__sfp+0x16>
 80009bc:	4630      	mov	r0, r6
 80009be:	f7ff ffbd 	bl	800093c <__sinit>
 80009c2:	3648      	adds	r6, #72	; 0x48
 80009c4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80009c8:	3b01      	subs	r3, #1
 80009ca:	d503      	bpl.n	80009d4 <__sfp+0x28>
 80009cc:	6833      	ldr	r3, [r6, #0]
 80009ce:	b30b      	cbz	r3, 8000a14 <__sfp+0x68>
 80009d0:	6836      	ldr	r6, [r6, #0]
 80009d2:	e7f7      	b.n	80009c4 <__sfp+0x18>
 80009d4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80009d8:	b9d5      	cbnz	r5, 8000a10 <__sfp+0x64>
 80009da:	4b16      	ldr	r3, [pc, #88]	; (8000a34 <__sfp+0x88>)
 80009dc:	60e3      	str	r3, [r4, #12]
 80009de:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80009e2:	6665      	str	r5, [r4, #100]	; 0x64
 80009e4:	f000 f8a4 	bl	8000b30 <__retarget_lock_init_recursive>
 80009e8:	f7ff ff96 	bl	8000918 <__sfp_lock_release>
 80009ec:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80009f0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80009f4:	6025      	str	r5, [r4, #0]
 80009f6:	61a5      	str	r5, [r4, #24]
 80009f8:	2208      	movs	r2, #8
 80009fa:	4629      	mov	r1, r5
 80009fc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a00:	f7ff fd36 	bl	8000470 <memset>
 8000a04:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a08:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a0c:	4620      	mov	r0, r4
 8000a0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a10:	3468      	adds	r4, #104	; 0x68
 8000a12:	e7d9      	b.n	80009c8 <__sfp+0x1c>
 8000a14:	2104      	movs	r1, #4
 8000a16:	4638      	mov	r0, r7
 8000a18:	f7ff ff62 	bl	80008e0 <__sfmoreglue>
 8000a1c:	4604      	mov	r4, r0
 8000a1e:	6030      	str	r0, [r6, #0]
 8000a20:	2800      	cmp	r0, #0
 8000a22:	d1d5      	bne.n	80009d0 <__sfp+0x24>
 8000a24:	f7ff ff78 	bl	8000918 <__sfp_lock_release>
 8000a28:	230c      	movs	r3, #12
 8000a2a:	603b      	str	r3, [r7, #0]
 8000a2c:	e7ee      	b.n	8000a0c <__sfp+0x60>
 8000a2e:	bf00      	nop
 8000a30:	080010f0 	.word	0x080010f0
 8000a34:	ffff0001 	.word	0xffff0001

08000a38 <_fwalk>:
 8000a38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a3c:	460f      	mov	r7, r1
 8000a3e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a42:	2600      	movs	r6, #0
 8000a44:	e9d4 8501 	ldrd	r8, r5, [r4, #4]
 8000a48:	f1b8 0801 	subs.w	r8, r8, #1
 8000a4c:	d505      	bpl.n	8000a5a <_fwalk+0x22>
 8000a4e:	6824      	ldr	r4, [r4, #0]
 8000a50:	2c00      	cmp	r4, #0
 8000a52:	d1f7      	bne.n	8000a44 <_fwalk+0xc>
 8000a54:	4630      	mov	r0, r6
 8000a56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a5a:	89ab      	ldrh	r3, [r5, #12]
 8000a5c:	2b01      	cmp	r3, #1
 8000a5e:	d906      	bls.n	8000a6e <_fwalk+0x36>
 8000a60:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a64:	3301      	adds	r3, #1
 8000a66:	d002      	beq.n	8000a6e <_fwalk+0x36>
 8000a68:	4628      	mov	r0, r5
 8000a6a:	47b8      	blx	r7
 8000a6c:	4306      	orrs	r6, r0
 8000a6e:	3568      	adds	r5, #104	; 0x68
 8000a70:	e7ea      	b.n	8000a48 <_fwalk+0x10>

08000a72 <_fwalk_reent>:
 8000a72:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a76:	4606      	mov	r6, r0
 8000a78:	4688      	mov	r8, r1
 8000a7a:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a7e:	2700      	movs	r7, #0
 8000a80:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a84:	f1b9 0901 	subs.w	r9, r9, #1
 8000a88:	d505      	bpl.n	8000a96 <_fwalk_reent+0x24>
 8000a8a:	6824      	ldr	r4, [r4, #0]
 8000a8c:	2c00      	cmp	r4, #0
 8000a8e:	d1f7      	bne.n	8000a80 <_fwalk_reent+0xe>
 8000a90:	4638      	mov	r0, r7
 8000a92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a96:	89ab      	ldrh	r3, [r5, #12]
 8000a98:	2b01      	cmp	r3, #1
 8000a9a:	d907      	bls.n	8000aac <_fwalk_reent+0x3a>
 8000a9c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000aa0:	3301      	adds	r3, #1
 8000aa2:	d003      	beq.n	8000aac <_fwalk_reent+0x3a>
 8000aa4:	4629      	mov	r1, r5
 8000aa6:	4630      	mov	r0, r6
 8000aa8:	47c0      	blx	r8
 8000aaa:	4307      	orrs	r7, r0
 8000aac:	3568      	adds	r5, #104	; 0x68
 8000aae:	e7e9      	b.n	8000a84 <_fwalk_reent+0x12>

08000ab0 <_getc_r>:
 8000ab0:	b538      	push	{r3, r4, r5, lr}
 8000ab2:	460c      	mov	r4, r1
 8000ab4:	4605      	mov	r5, r0
 8000ab6:	b118      	cbz	r0, 8000ac0 <_getc_r+0x10>
 8000ab8:	6983      	ldr	r3, [r0, #24]
 8000aba:	b90b      	cbnz	r3, 8000ac0 <_getc_r+0x10>
 8000abc:	f7ff ff3e 	bl	800093c <__sinit>
 8000ac0:	4b18      	ldr	r3, [pc, #96]	; (8000b24 <_getc_r+0x74>)
 8000ac2:	429c      	cmp	r4, r3
 8000ac4:	d11e      	bne.n	8000b04 <_getc_r+0x54>
 8000ac6:	686c      	ldr	r4, [r5, #4]
 8000ac8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000aca:	07d8      	lsls	r0, r3, #31
 8000acc:	d405      	bmi.n	8000ada <_getc_r+0x2a>
 8000ace:	89a3      	ldrh	r3, [r4, #12]
 8000ad0:	0599      	lsls	r1, r3, #22
 8000ad2:	d402      	bmi.n	8000ada <_getc_r+0x2a>
 8000ad4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000ad6:	f000 f82c 	bl	8000b32 <__retarget_lock_acquire_recursive>
 8000ada:	6863      	ldr	r3, [r4, #4]
 8000adc:	3b01      	subs	r3, #1
 8000ade:	2b00      	cmp	r3, #0
 8000ae0:	6063      	str	r3, [r4, #4]
 8000ae2:	da19      	bge.n	8000b18 <_getc_r+0x68>
 8000ae4:	4628      	mov	r0, r5
 8000ae6:	4621      	mov	r1, r4
 8000ae8:	f000 f968 	bl	8000dbc <__srget_r>
 8000aec:	4605      	mov	r5, r0
 8000aee:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000af0:	07da      	lsls	r2, r3, #31
 8000af2:	d405      	bmi.n	8000b00 <_getc_r+0x50>
 8000af4:	89a3      	ldrh	r3, [r4, #12]
 8000af6:	059b      	lsls	r3, r3, #22
 8000af8:	d402      	bmi.n	8000b00 <_getc_r+0x50>
 8000afa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000afc:	f000 f81a 	bl	8000b34 <__retarget_lock_release_recursive>
 8000b00:	4628      	mov	r0, r5
 8000b02:	bd38      	pop	{r3, r4, r5, pc}
 8000b04:	4b08      	ldr	r3, [pc, #32]	; (8000b28 <_getc_r+0x78>)
 8000b06:	429c      	cmp	r4, r3
 8000b08:	d101      	bne.n	8000b0e <_getc_r+0x5e>
 8000b0a:	68ac      	ldr	r4, [r5, #8]
 8000b0c:	e7dc      	b.n	8000ac8 <_getc_r+0x18>
 8000b0e:	4b07      	ldr	r3, [pc, #28]	; (8000b2c <_getc_r+0x7c>)
 8000b10:	429c      	cmp	r4, r3
 8000b12:	bf08      	it	eq
 8000b14:	68ec      	ldreq	r4, [r5, #12]
 8000b16:	e7d7      	b.n	8000ac8 <_getc_r+0x18>
 8000b18:	6823      	ldr	r3, [r4, #0]
 8000b1a:	1c5a      	adds	r2, r3, #1
 8000b1c:	6022      	str	r2, [r4, #0]
 8000b1e:	781d      	ldrb	r5, [r3, #0]
 8000b20:	e7e5      	b.n	8000aee <_getc_r+0x3e>
 8000b22:	bf00      	nop
 8000b24:	08001114 	.word	0x08001114
 8000b28:	08001134 	.word	0x08001134
 8000b2c:	080010f4 	.word	0x080010f4

08000b30 <__retarget_lock_init_recursive>:
 8000b30:	4770      	bx	lr

08000b32 <__retarget_lock_acquire_recursive>:
 8000b32:	4770      	bx	lr

08000b34 <__retarget_lock_release_recursive>:
 8000b34:	4770      	bx	lr

08000b36 <__swhatbuf_r>:
 8000b36:	b570      	push	{r4, r5, r6, lr}
 8000b38:	460e      	mov	r6, r1
 8000b3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b3e:	2900      	cmp	r1, #0
 8000b40:	b096      	sub	sp, #88	; 0x58
 8000b42:	4614      	mov	r4, r2
 8000b44:	461d      	mov	r5, r3
 8000b46:	da08      	bge.n	8000b5a <__swhatbuf_r+0x24>
 8000b48:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	602a      	str	r2, [r5, #0]
 8000b50:	061a      	lsls	r2, r3, #24
 8000b52:	d410      	bmi.n	8000b76 <__swhatbuf_r+0x40>
 8000b54:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b58:	e00e      	b.n	8000b78 <__swhatbuf_r+0x42>
 8000b5a:	466a      	mov	r2, sp
 8000b5c:	f000 f9d0 	bl	8000f00 <_fstat_r>
 8000b60:	2800      	cmp	r0, #0
 8000b62:	dbf1      	blt.n	8000b48 <__swhatbuf_r+0x12>
 8000b64:	9a01      	ldr	r2, [sp, #4]
 8000b66:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b6a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b6e:	425a      	negs	r2, r3
 8000b70:	415a      	adcs	r2, r3
 8000b72:	602a      	str	r2, [r5, #0]
 8000b74:	e7ee      	b.n	8000b54 <__swhatbuf_r+0x1e>
 8000b76:	2340      	movs	r3, #64	; 0x40
 8000b78:	2000      	movs	r0, #0
 8000b7a:	6023      	str	r3, [r4, #0]
 8000b7c:	b016      	add	sp, #88	; 0x58
 8000b7e:	bd70      	pop	{r4, r5, r6, pc}

08000b80 <__smakebuf_r>:
 8000b80:	898b      	ldrh	r3, [r1, #12]
 8000b82:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b84:	079d      	lsls	r5, r3, #30
 8000b86:	4606      	mov	r6, r0
 8000b88:	460c      	mov	r4, r1
 8000b8a:	d507      	bpl.n	8000b9c <__smakebuf_r+0x1c>
 8000b8c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b90:	6023      	str	r3, [r4, #0]
 8000b92:	6123      	str	r3, [r4, #16]
 8000b94:	2301      	movs	r3, #1
 8000b96:	6163      	str	r3, [r4, #20]
 8000b98:	b002      	add	sp, #8
 8000b9a:	bd70      	pop	{r4, r5, r6, pc}
 8000b9c:	ab01      	add	r3, sp, #4
 8000b9e:	466a      	mov	r2, sp
 8000ba0:	f7ff ffc9 	bl	8000b36 <__swhatbuf_r>
 8000ba4:	9900      	ldr	r1, [sp, #0]
 8000ba6:	4605      	mov	r5, r0
 8000ba8:	4630      	mov	r0, r6
 8000baa:	f000 f893 	bl	8000cd4 <_malloc_r>
 8000bae:	b948      	cbnz	r0, 8000bc4 <__smakebuf_r+0x44>
 8000bb0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bb4:	059a      	lsls	r2, r3, #22
 8000bb6:	d4ef      	bmi.n	8000b98 <__smakebuf_r+0x18>
 8000bb8:	f023 0303 	bic.w	r3, r3, #3
 8000bbc:	f043 0302 	orr.w	r3, r3, #2
 8000bc0:	81a3      	strh	r3, [r4, #12]
 8000bc2:	e7e3      	b.n	8000b8c <__smakebuf_r+0xc>
 8000bc4:	4b0d      	ldr	r3, [pc, #52]	; (8000bfc <__smakebuf_r+0x7c>)
 8000bc6:	62b3      	str	r3, [r6, #40]	; 0x28
 8000bc8:	89a3      	ldrh	r3, [r4, #12]
 8000bca:	6020      	str	r0, [r4, #0]
 8000bcc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000bd0:	81a3      	strh	r3, [r4, #12]
 8000bd2:	9b00      	ldr	r3, [sp, #0]
 8000bd4:	6163      	str	r3, [r4, #20]
 8000bd6:	9b01      	ldr	r3, [sp, #4]
 8000bd8:	6120      	str	r0, [r4, #16]
 8000bda:	b15b      	cbz	r3, 8000bf4 <__smakebuf_r+0x74>
 8000bdc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000be0:	4630      	mov	r0, r6
 8000be2:	f000 f99f 	bl	8000f24 <_isatty_r>
 8000be6:	b128      	cbz	r0, 8000bf4 <__smakebuf_r+0x74>
 8000be8:	89a3      	ldrh	r3, [r4, #12]
 8000bea:	f023 0303 	bic.w	r3, r3, #3
 8000bee:	f043 0301 	orr.w	r3, r3, #1
 8000bf2:	81a3      	strh	r3, [r4, #12]
 8000bf4:	89a0      	ldrh	r0, [r4, #12]
 8000bf6:	4305      	orrs	r5, r0
 8000bf8:	81a5      	strh	r5, [r4, #12]
 8000bfa:	e7cd      	b.n	8000b98 <__smakebuf_r+0x18>
 8000bfc:	080008d5 	.word	0x080008d5

08000c00 <_free_r>:
 8000c00:	b538      	push	{r3, r4, r5, lr}
 8000c02:	4605      	mov	r5, r0
 8000c04:	2900      	cmp	r1, #0
 8000c06:	d041      	beq.n	8000c8c <_free_r+0x8c>
 8000c08:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c0c:	1f0c      	subs	r4, r1, #4
 8000c0e:	2b00      	cmp	r3, #0
 8000c10:	bfb8      	it	lt
 8000c12:	18e4      	addlt	r4, r4, r3
 8000c14:	f000 f9a8 	bl	8000f68 <__malloc_lock>
 8000c18:	4a1d      	ldr	r2, [pc, #116]	; (8000c90 <_free_r+0x90>)
 8000c1a:	6813      	ldr	r3, [r2, #0]
 8000c1c:	b933      	cbnz	r3, 8000c2c <_free_r+0x2c>
 8000c1e:	6063      	str	r3, [r4, #4]
 8000c20:	6014      	str	r4, [r2, #0]
 8000c22:	4628      	mov	r0, r5
 8000c24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c28:	f000 b9a4 	b.w	8000f74 <__malloc_unlock>
 8000c2c:	42a3      	cmp	r3, r4
 8000c2e:	d908      	bls.n	8000c42 <_free_r+0x42>
 8000c30:	6820      	ldr	r0, [r4, #0]
 8000c32:	1821      	adds	r1, r4, r0
 8000c34:	428b      	cmp	r3, r1
 8000c36:	bf01      	itttt	eq
 8000c38:	6819      	ldreq	r1, [r3, #0]
 8000c3a:	685b      	ldreq	r3, [r3, #4]
 8000c3c:	1809      	addeq	r1, r1, r0
 8000c3e:	6021      	streq	r1, [r4, #0]
 8000c40:	e7ed      	b.n	8000c1e <_free_r+0x1e>
 8000c42:	461a      	mov	r2, r3
 8000c44:	685b      	ldr	r3, [r3, #4]
 8000c46:	b10b      	cbz	r3, 8000c4c <_free_r+0x4c>
 8000c48:	42a3      	cmp	r3, r4
 8000c4a:	d9fa      	bls.n	8000c42 <_free_r+0x42>
 8000c4c:	6811      	ldr	r1, [r2, #0]
 8000c4e:	1850      	adds	r0, r2, r1
 8000c50:	42a0      	cmp	r0, r4
 8000c52:	d10b      	bne.n	8000c6c <_free_r+0x6c>
 8000c54:	6820      	ldr	r0, [r4, #0]
 8000c56:	4401      	add	r1, r0
 8000c58:	1850      	adds	r0, r2, r1
 8000c5a:	4283      	cmp	r3, r0
 8000c5c:	6011      	str	r1, [r2, #0]
 8000c5e:	d1e0      	bne.n	8000c22 <_free_r+0x22>
 8000c60:	6818      	ldr	r0, [r3, #0]
 8000c62:	685b      	ldr	r3, [r3, #4]
 8000c64:	6053      	str	r3, [r2, #4]
 8000c66:	4401      	add	r1, r0
 8000c68:	6011      	str	r1, [r2, #0]
 8000c6a:	e7da      	b.n	8000c22 <_free_r+0x22>
 8000c6c:	d902      	bls.n	8000c74 <_free_r+0x74>
 8000c6e:	230c      	movs	r3, #12
 8000c70:	602b      	str	r3, [r5, #0]
 8000c72:	e7d6      	b.n	8000c22 <_free_r+0x22>
 8000c74:	6820      	ldr	r0, [r4, #0]
 8000c76:	1821      	adds	r1, r4, r0
 8000c78:	428b      	cmp	r3, r1
 8000c7a:	bf04      	itt	eq
 8000c7c:	6819      	ldreq	r1, [r3, #0]
 8000c7e:	685b      	ldreq	r3, [r3, #4]
 8000c80:	6063      	str	r3, [r4, #4]
 8000c82:	bf04      	itt	eq
 8000c84:	1809      	addeq	r1, r1, r0
 8000c86:	6021      	streq	r1, [r4, #0]
 8000c88:	6054      	str	r4, [r2, #4]
 8000c8a:	e7ca      	b.n	8000c22 <_free_r+0x22>
 8000c8c:	bd38      	pop	{r3, r4, r5, pc}
 8000c8e:	bf00      	nop
 8000c90:	20000088 	.word	0x20000088

08000c94 <sbrk_aligned>:
 8000c94:	b570      	push	{r4, r5, r6, lr}
 8000c96:	4e0e      	ldr	r6, [pc, #56]	; (8000cd0 <sbrk_aligned+0x3c>)
 8000c98:	460c      	mov	r4, r1
 8000c9a:	6831      	ldr	r1, [r6, #0]
 8000c9c:	4605      	mov	r5, r0
 8000c9e:	b911      	cbnz	r1, 8000ca6 <sbrk_aligned+0x12>
 8000ca0:	f000 f8b8 	bl	8000e14 <_sbrk_r>
 8000ca4:	6030      	str	r0, [r6, #0]
 8000ca6:	4621      	mov	r1, r4
 8000ca8:	4628      	mov	r0, r5
 8000caa:	f000 f8b3 	bl	8000e14 <_sbrk_r>
 8000cae:	1c43      	adds	r3, r0, #1
 8000cb0:	d00a      	beq.n	8000cc8 <sbrk_aligned+0x34>
 8000cb2:	1cc4      	adds	r4, r0, #3
 8000cb4:	f024 0403 	bic.w	r4, r4, #3
 8000cb8:	42a0      	cmp	r0, r4
 8000cba:	d007      	beq.n	8000ccc <sbrk_aligned+0x38>
 8000cbc:	1a21      	subs	r1, r4, r0
 8000cbe:	4628      	mov	r0, r5
 8000cc0:	f000 f8a8 	bl	8000e14 <_sbrk_r>
 8000cc4:	3001      	adds	r0, #1
 8000cc6:	d101      	bne.n	8000ccc <sbrk_aligned+0x38>
 8000cc8:	f04f 34ff 	mov.w	r4, #4294967295
 8000ccc:	4620      	mov	r0, r4
 8000cce:	bd70      	pop	{r4, r5, r6, pc}
 8000cd0:	2000008c 	.word	0x2000008c

08000cd4 <_malloc_r>:
 8000cd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cd8:	1ccd      	adds	r5, r1, #3
 8000cda:	f025 0503 	bic.w	r5, r5, #3
 8000cde:	3508      	adds	r5, #8
 8000ce0:	2d0c      	cmp	r5, #12
 8000ce2:	bf38      	it	cc
 8000ce4:	250c      	movcc	r5, #12
 8000ce6:	2d00      	cmp	r5, #0
 8000ce8:	4607      	mov	r7, r0
 8000cea:	db01      	blt.n	8000cf0 <_malloc_r+0x1c>
 8000cec:	42a9      	cmp	r1, r5
 8000cee:	d905      	bls.n	8000cfc <_malloc_r+0x28>
 8000cf0:	230c      	movs	r3, #12
 8000cf2:	603b      	str	r3, [r7, #0]
 8000cf4:	2600      	movs	r6, #0
 8000cf6:	4630      	mov	r0, r6
 8000cf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000cfc:	4e2e      	ldr	r6, [pc, #184]	; (8000db8 <_malloc_r+0xe4>)
 8000cfe:	f000 f933 	bl	8000f68 <__malloc_lock>
 8000d02:	6833      	ldr	r3, [r6, #0]
 8000d04:	461c      	mov	r4, r3
 8000d06:	bb34      	cbnz	r4, 8000d56 <_malloc_r+0x82>
 8000d08:	4629      	mov	r1, r5
 8000d0a:	4638      	mov	r0, r7
 8000d0c:	f7ff ffc2 	bl	8000c94 <sbrk_aligned>
 8000d10:	1c43      	adds	r3, r0, #1
 8000d12:	4604      	mov	r4, r0
 8000d14:	d14d      	bne.n	8000db2 <_malloc_r+0xde>
 8000d16:	6834      	ldr	r4, [r6, #0]
 8000d18:	4626      	mov	r6, r4
 8000d1a:	2e00      	cmp	r6, #0
 8000d1c:	d140      	bne.n	8000da0 <_malloc_r+0xcc>
 8000d1e:	6823      	ldr	r3, [r4, #0]
 8000d20:	4631      	mov	r1, r6
 8000d22:	4638      	mov	r0, r7
 8000d24:	eb04 0803 	add.w	r8, r4, r3
 8000d28:	f000 f874 	bl	8000e14 <_sbrk_r>
 8000d2c:	4580      	cmp	r8, r0
 8000d2e:	d13a      	bne.n	8000da6 <_malloc_r+0xd2>
 8000d30:	6821      	ldr	r1, [r4, #0]
 8000d32:	3503      	adds	r5, #3
 8000d34:	1a6d      	subs	r5, r5, r1
 8000d36:	f025 0503 	bic.w	r5, r5, #3
 8000d3a:	3508      	adds	r5, #8
 8000d3c:	2d0c      	cmp	r5, #12
 8000d3e:	bf38      	it	cc
 8000d40:	250c      	movcc	r5, #12
 8000d42:	4629      	mov	r1, r5
 8000d44:	4638      	mov	r0, r7
 8000d46:	f7ff ffa5 	bl	8000c94 <sbrk_aligned>
 8000d4a:	3001      	adds	r0, #1
 8000d4c:	d02b      	beq.n	8000da6 <_malloc_r+0xd2>
 8000d4e:	6823      	ldr	r3, [r4, #0]
 8000d50:	442b      	add	r3, r5
 8000d52:	6023      	str	r3, [r4, #0]
 8000d54:	e00e      	b.n	8000d74 <_malloc_r+0xa0>
 8000d56:	6822      	ldr	r2, [r4, #0]
 8000d58:	1b52      	subs	r2, r2, r5
 8000d5a:	d41e      	bmi.n	8000d9a <_malloc_r+0xc6>
 8000d5c:	2a0b      	cmp	r2, #11
 8000d5e:	d916      	bls.n	8000d8e <_malloc_r+0xba>
 8000d60:	1961      	adds	r1, r4, r5
 8000d62:	42a3      	cmp	r3, r4
 8000d64:	6025      	str	r5, [r4, #0]
 8000d66:	bf18      	it	ne
 8000d68:	6059      	strne	r1, [r3, #4]
 8000d6a:	6863      	ldr	r3, [r4, #4]
 8000d6c:	bf08      	it	eq
 8000d6e:	6031      	streq	r1, [r6, #0]
 8000d70:	5162      	str	r2, [r4, r5]
 8000d72:	604b      	str	r3, [r1, #4]
 8000d74:	4638      	mov	r0, r7
 8000d76:	f104 060b 	add.w	r6, r4, #11
 8000d7a:	f000 f8fb 	bl	8000f74 <__malloc_unlock>
 8000d7e:	f026 0607 	bic.w	r6, r6, #7
 8000d82:	1d23      	adds	r3, r4, #4
 8000d84:	1af2      	subs	r2, r6, r3
 8000d86:	d0b6      	beq.n	8000cf6 <_malloc_r+0x22>
 8000d88:	1b9b      	subs	r3, r3, r6
 8000d8a:	50a3      	str	r3, [r4, r2]
 8000d8c:	e7b3      	b.n	8000cf6 <_malloc_r+0x22>
 8000d8e:	6862      	ldr	r2, [r4, #4]
 8000d90:	42a3      	cmp	r3, r4
 8000d92:	bf0c      	ite	eq
 8000d94:	6032      	streq	r2, [r6, #0]
 8000d96:	605a      	strne	r2, [r3, #4]
 8000d98:	e7ec      	b.n	8000d74 <_malloc_r+0xa0>
 8000d9a:	4623      	mov	r3, r4
 8000d9c:	6864      	ldr	r4, [r4, #4]
 8000d9e:	e7b2      	b.n	8000d06 <_malloc_r+0x32>
 8000da0:	4634      	mov	r4, r6
 8000da2:	6876      	ldr	r6, [r6, #4]
 8000da4:	e7b9      	b.n	8000d1a <_malloc_r+0x46>
 8000da6:	230c      	movs	r3, #12
 8000da8:	603b      	str	r3, [r7, #0]
 8000daa:	4638      	mov	r0, r7
 8000dac:	f000 f8e2 	bl	8000f74 <__malloc_unlock>
 8000db0:	e7a1      	b.n	8000cf6 <_malloc_r+0x22>
 8000db2:	6025      	str	r5, [r4, #0]
 8000db4:	e7de      	b.n	8000d74 <_malloc_r+0xa0>
 8000db6:	bf00      	nop
 8000db8:	20000088 	.word	0x20000088

08000dbc <__srget_r>:
 8000dbc:	b538      	push	{r3, r4, r5, lr}
 8000dbe:	460c      	mov	r4, r1
 8000dc0:	4605      	mov	r5, r0
 8000dc2:	b118      	cbz	r0, 8000dcc <__srget_r+0x10>
 8000dc4:	6983      	ldr	r3, [r0, #24]
 8000dc6:	b90b      	cbnz	r3, 8000dcc <__srget_r+0x10>
 8000dc8:	f7ff fdb8 	bl	800093c <__sinit>
 8000dcc:	4b0e      	ldr	r3, [pc, #56]	; (8000e08 <__srget_r+0x4c>)
 8000dce:	429c      	cmp	r4, r3
 8000dd0:	d10d      	bne.n	8000dee <__srget_r+0x32>
 8000dd2:	686c      	ldr	r4, [r5, #4]
 8000dd4:	4621      	mov	r1, r4
 8000dd6:	4628      	mov	r0, r5
 8000dd8:	f000 f8ee 	bl	8000fb8 <__srefill_r>
 8000ddc:	b988      	cbnz	r0, 8000e02 <__srget_r+0x46>
 8000dde:	6863      	ldr	r3, [r4, #4]
 8000de0:	3b01      	subs	r3, #1
 8000de2:	6063      	str	r3, [r4, #4]
 8000de4:	6823      	ldr	r3, [r4, #0]
 8000de6:	1c5a      	adds	r2, r3, #1
 8000de8:	6022      	str	r2, [r4, #0]
 8000dea:	7818      	ldrb	r0, [r3, #0]
 8000dec:	bd38      	pop	{r3, r4, r5, pc}
 8000dee:	4b07      	ldr	r3, [pc, #28]	; (8000e0c <__srget_r+0x50>)
 8000df0:	429c      	cmp	r4, r3
 8000df2:	d101      	bne.n	8000df8 <__srget_r+0x3c>
 8000df4:	68ac      	ldr	r4, [r5, #8]
 8000df6:	e7ed      	b.n	8000dd4 <__srget_r+0x18>
 8000df8:	4b05      	ldr	r3, [pc, #20]	; (8000e10 <__srget_r+0x54>)
 8000dfa:	429c      	cmp	r4, r3
 8000dfc:	bf08      	it	eq
 8000dfe:	68ec      	ldreq	r4, [r5, #12]
 8000e00:	e7e8      	b.n	8000dd4 <__srget_r+0x18>
 8000e02:	f04f 30ff 	mov.w	r0, #4294967295
 8000e06:	e7f1      	b.n	8000dec <__srget_r+0x30>
 8000e08:	08001114 	.word	0x08001114
 8000e0c:	08001134 	.word	0x08001134
 8000e10:	080010f4 	.word	0x080010f4

08000e14 <_sbrk_r>:
 8000e14:	b538      	push	{r3, r4, r5, lr}
 8000e16:	4d06      	ldr	r5, [pc, #24]	; (8000e30 <_sbrk_r+0x1c>)
 8000e18:	2300      	movs	r3, #0
 8000e1a:	4604      	mov	r4, r0
 8000e1c:	4608      	mov	r0, r1
 8000e1e:	602b      	str	r3, [r5, #0]
 8000e20:	f7ff fa8a 	bl	8000338 <_sbrk>
 8000e24:	1c43      	adds	r3, r0, #1
 8000e26:	d102      	bne.n	8000e2e <_sbrk_r+0x1a>
 8000e28:	682b      	ldr	r3, [r5, #0]
 8000e2a:	b103      	cbz	r3, 8000e2e <_sbrk_r+0x1a>
 8000e2c:	6023      	str	r3, [r4, #0]
 8000e2e:	bd38      	pop	{r3, r4, r5, pc}
 8000e30:	20000090 	.word	0x20000090

08000e34 <__sread>:
 8000e34:	b510      	push	{r4, lr}
 8000e36:	460c      	mov	r4, r1
 8000e38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e3c:	f000 f8a0 	bl	8000f80 <_read_r>
 8000e40:	2800      	cmp	r0, #0
 8000e42:	bfab      	itete	ge
 8000e44:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e46:	89a3      	ldrhlt	r3, [r4, #12]
 8000e48:	181b      	addge	r3, r3, r0
 8000e4a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e4e:	bfac      	ite	ge
 8000e50:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e52:	81a3      	strhlt	r3, [r4, #12]
 8000e54:	bd10      	pop	{r4, pc}

08000e56 <__swrite>:
 8000e56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e5a:	461f      	mov	r7, r3
 8000e5c:	898b      	ldrh	r3, [r1, #12]
 8000e5e:	05db      	lsls	r3, r3, #23
 8000e60:	4605      	mov	r5, r0
 8000e62:	460c      	mov	r4, r1
 8000e64:	4616      	mov	r6, r2
 8000e66:	d505      	bpl.n	8000e74 <__swrite+0x1e>
 8000e68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e6c:	2302      	movs	r3, #2
 8000e6e:	2200      	movs	r2, #0
 8000e70:	f000 f868 	bl	8000f44 <_lseek_r>
 8000e74:	89a3      	ldrh	r3, [r4, #12]
 8000e76:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e7a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e7e:	81a3      	strh	r3, [r4, #12]
 8000e80:	4632      	mov	r2, r6
 8000e82:	463b      	mov	r3, r7
 8000e84:	4628      	mov	r0, r5
 8000e86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e8a:	f000 b817 	b.w	8000ebc <_write_r>

08000e8e <__sseek>:
 8000e8e:	b510      	push	{r4, lr}
 8000e90:	460c      	mov	r4, r1
 8000e92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e96:	f000 f855 	bl	8000f44 <_lseek_r>
 8000e9a:	1c43      	adds	r3, r0, #1
 8000e9c:	89a3      	ldrh	r3, [r4, #12]
 8000e9e:	bf15      	itete	ne
 8000ea0:	6560      	strne	r0, [r4, #84]	; 0x54
 8000ea2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000ea6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000eaa:	81a3      	strheq	r3, [r4, #12]
 8000eac:	bf18      	it	ne
 8000eae:	81a3      	strhne	r3, [r4, #12]
 8000eb0:	bd10      	pop	{r4, pc}

08000eb2 <__sclose>:
 8000eb2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eb6:	f000 b813 	b.w	8000ee0 <_close_r>
	...

08000ebc <_write_r>:
 8000ebc:	b538      	push	{r3, r4, r5, lr}
 8000ebe:	4d07      	ldr	r5, [pc, #28]	; (8000edc <_write_r+0x20>)
 8000ec0:	4604      	mov	r4, r0
 8000ec2:	4608      	mov	r0, r1
 8000ec4:	4611      	mov	r1, r2
 8000ec6:	2200      	movs	r2, #0
 8000ec8:	602a      	str	r2, [r5, #0]
 8000eca:	461a      	mov	r2, r3
 8000ecc:	f7ff f9e7 	bl	800029e <_write>
 8000ed0:	1c43      	adds	r3, r0, #1
 8000ed2:	d102      	bne.n	8000eda <_write_r+0x1e>
 8000ed4:	682b      	ldr	r3, [r5, #0]
 8000ed6:	b103      	cbz	r3, 8000eda <_write_r+0x1e>
 8000ed8:	6023      	str	r3, [r4, #0]
 8000eda:	bd38      	pop	{r3, r4, r5, pc}
 8000edc:	20000090 	.word	0x20000090

08000ee0 <_close_r>:
 8000ee0:	b538      	push	{r3, r4, r5, lr}
 8000ee2:	4d06      	ldr	r5, [pc, #24]	; (8000efc <_close_r+0x1c>)
 8000ee4:	2300      	movs	r3, #0
 8000ee6:	4604      	mov	r4, r0
 8000ee8:	4608      	mov	r0, r1
 8000eea:	602b      	str	r3, [r5, #0]
 8000eec:	f7ff f9f3 	bl	80002d6 <_close>
 8000ef0:	1c43      	adds	r3, r0, #1
 8000ef2:	d102      	bne.n	8000efa <_close_r+0x1a>
 8000ef4:	682b      	ldr	r3, [r5, #0]
 8000ef6:	b103      	cbz	r3, 8000efa <_close_r+0x1a>
 8000ef8:	6023      	str	r3, [r4, #0]
 8000efa:	bd38      	pop	{r3, r4, r5, pc}
 8000efc:	20000090 	.word	0x20000090

08000f00 <_fstat_r>:
 8000f00:	b538      	push	{r3, r4, r5, lr}
 8000f02:	4d07      	ldr	r5, [pc, #28]	; (8000f20 <_fstat_r+0x20>)
 8000f04:	2300      	movs	r3, #0
 8000f06:	4604      	mov	r4, r0
 8000f08:	4608      	mov	r0, r1
 8000f0a:	4611      	mov	r1, r2
 8000f0c:	602b      	str	r3, [r5, #0]
 8000f0e:	f7ff f9ed 	bl	80002ec <_fstat>
 8000f12:	1c43      	adds	r3, r0, #1
 8000f14:	d102      	bne.n	8000f1c <_fstat_r+0x1c>
 8000f16:	682b      	ldr	r3, [r5, #0]
 8000f18:	b103      	cbz	r3, 8000f1c <_fstat_r+0x1c>
 8000f1a:	6023      	str	r3, [r4, #0]
 8000f1c:	bd38      	pop	{r3, r4, r5, pc}
 8000f1e:	bf00      	nop
 8000f20:	20000090 	.word	0x20000090

08000f24 <_isatty_r>:
 8000f24:	b538      	push	{r3, r4, r5, lr}
 8000f26:	4d06      	ldr	r5, [pc, #24]	; (8000f40 <_isatty_r+0x1c>)
 8000f28:	2300      	movs	r3, #0
 8000f2a:	4604      	mov	r4, r0
 8000f2c:	4608      	mov	r0, r1
 8000f2e:	602b      	str	r3, [r5, #0]
 8000f30:	f7ff f9eb 	bl	800030a <_isatty>
 8000f34:	1c43      	adds	r3, r0, #1
 8000f36:	d102      	bne.n	8000f3e <_isatty_r+0x1a>
 8000f38:	682b      	ldr	r3, [r5, #0]
 8000f3a:	b103      	cbz	r3, 8000f3e <_isatty_r+0x1a>
 8000f3c:	6023      	str	r3, [r4, #0]
 8000f3e:	bd38      	pop	{r3, r4, r5, pc}
 8000f40:	20000090 	.word	0x20000090

08000f44 <_lseek_r>:
 8000f44:	b538      	push	{r3, r4, r5, lr}
 8000f46:	4d07      	ldr	r5, [pc, #28]	; (8000f64 <_lseek_r+0x20>)
 8000f48:	4604      	mov	r4, r0
 8000f4a:	4608      	mov	r0, r1
 8000f4c:	4611      	mov	r1, r2
 8000f4e:	2200      	movs	r2, #0
 8000f50:	602a      	str	r2, [r5, #0]
 8000f52:	461a      	mov	r2, r3
 8000f54:	f7ff f9e3 	bl	800031e <_lseek>
 8000f58:	1c43      	adds	r3, r0, #1
 8000f5a:	d102      	bne.n	8000f62 <_lseek_r+0x1e>
 8000f5c:	682b      	ldr	r3, [r5, #0]
 8000f5e:	b103      	cbz	r3, 8000f62 <_lseek_r+0x1e>
 8000f60:	6023      	str	r3, [r4, #0]
 8000f62:	bd38      	pop	{r3, r4, r5, pc}
 8000f64:	20000090 	.word	0x20000090

08000f68 <__malloc_lock>:
 8000f68:	4801      	ldr	r0, [pc, #4]	; (8000f70 <__malloc_lock+0x8>)
 8000f6a:	f7ff bde2 	b.w	8000b32 <__retarget_lock_acquire_recursive>
 8000f6e:	bf00      	nop
 8000f70:	20000084 	.word	0x20000084

08000f74 <__malloc_unlock>:
 8000f74:	4801      	ldr	r0, [pc, #4]	; (8000f7c <__malloc_unlock+0x8>)
 8000f76:	f7ff bddd 	b.w	8000b34 <__retarget_lock_release_recursive>
 8000f7a:	bf00      	nop
 8000f7c:	20000084 	.word	0x20000084

08000f80 <_read_r>:
 8000f80:	b538      	push	{r3, r4, r5, lr}
 8000f82:	4d07      	ldr	r5, [pc, #28]	; (8000fa0 <_read_r+0x20>)
 8000f84:	4604      	mov	r4, r0
 8000f86:	4608      	mov	r0, r1
 8000f88:	4611      	mov	r1, r2
 8000f8a:	2200      	movs	r2, #0
 8000f8c:	602a      	str	r2, [r5, #0]
 8000f8e:	461a      	mov	r2, r3
 8000f90:	f7ff f968 	bl	8000264 <_read>
 8000f94:	1c43      	adds	r3, r0, #1
 8000f96:	d102      	bne.n	8000f9e <_read_r+0x1e>
 8000f98:	682b      	ldr	r3, [r5, #0]
 8000f9a:	b103      	cbz	r3, 8000f9e <_read_r+0x1e>
 8000f9c:	6023      	str	r3, [r4, #0]
 8000f9e:	bd38      	pop	{r3, r4, r5, pc}
 8000fa0:	20000090 	.word	0x20000090

08000fa4 <lflush>:
 8000fa4:	8983      	ldrh	r3, [r0, #12]
 8000fa6:	f003 0309 	and.w	r3, r3, #9
 8000faa:	2b09      	cmp	r3, #9
 8000fac:	d101      	bne.n	8000fb2 <lflush+0xe>
 8000fae:	f7ff bc5b 	b.w	8000868 <fflush>
 8000fb2:	2000      	movs	r0, #0
 8000fb4:	4770      	bx	lr
	...

08000fb8 <__srefill_r>:
 8000fb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fba:	460c      	mov	r4, r1
 8000fbc:	4605      	mov	r5, r0
 8000fbe:	b118      	cbz	r0, 8000fc8 <__srefill_r+0x10>
 8000fc0:	6983      	ldr	r3, [r0, #24]
 8000fc2:	b90b      	cbnz	r3, 8000fc8 <__srefill_r+0x10>
 8000fc4:	f7ff fcba 	bl	800093c <__sinit>
 8000fc8:	4b3b      	ldr	r3, [pc, #236]	; (80010b8 <__srefill_r+0x100>)
 8000fca:	429c      	cmp	r4, r3
 8000fcc:	d10a      	bne.n	8000fe4 <__srefill_r+0x2c>
 8000fce:	686c      	ldr	r4, [r5, #4]
 8000fd0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000fd4:	2300      	movs	r3, #0
 8000fd6:	6063      	str	r3, [r4, #4]
 8000fd8:	89a3      	ldrh	r3, [r4, #12]
 8000fda:	069e      	lsls	r6, r3, #26
 8000fdc:	d50c      	bpl.n	8000ff8 <__srefill_r+0x40>
 8000fde:	f04f 30ff 	mov.w	r0, #4294967295
 8000fe2:	e066      	b.n	80010b2 <__srefill_r+0xfa>
 8000fe4:	4b35      	ldr	r3, [pc, #212]	; (80010bc <__srefill_r+0x104>)
 8000fe6:	429c      	cmp	r4, r3
 8000fe8:	d101      	bne.n	8000fee <__srefill_r+0x36>
 8000fea:	68ac      	ldr	r4, [r5, #8]
 8000fec:	e7f0      	b.n	8000fd0 <__srefill_r+0x18>
 8000fee:	4b34      	ldr	r3, [pc, #208]	; (80010c0 <__srefill_r+0x108>)
 8000ff0:	429c      	cmp	r4, r3
 8000ff2:	bf08      	it	eq
 8000ff4:	68ec      	ldreq	r4, [r5, #12]
 8000ff6:	e7eb      	b.n	8000fd0 <__srefill_r+0x18>
 8000ff8:	0758      	lsls	r0, r3, #29
 8000ffa:	d448      	bmi.n	800108e <__srefill_r+0xd6>
 8000ffc:	06d9      	lsls	r1, r3, #27
 8000ffe:	d405      	bmi.n	800100c <__srefill_r+0x54>
 8001000:	2309      	movs	r3, #9
 8001002:	602b      	str	r3, [r5, #0]
 8001004:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001008:	81a3      	strh	r3, [r4, #12]
 800100a:	e7e8      	b.n	8000fde <__srefill_r+0x26>
 800100c:	071a      	lsls	r2, r3, #28
 800100e:	d50b      	bpl.n	8001028 <__srefill_r+0x70>
 8001010:	4621      	mov	r1, r4
 8001012:	4628      	mov	r0, r5
 8001014:	f7ff fbec 	bl	80007f0 <_fflush_r>
 8001018:	2800      	cmp	r0, #0
 800101a:	d1e0      	bne.n	8000fde <__srefill_r+0x26>
 800101c:	89a3      	ldrh	r3, [r4, #12]
 800101e:	60a0      	str	r0, [r4, #8]
 8001020:	f023 0308 	bic.w	r3, r3, #8
 8001024:	81a3      	strh	r3, [r4, #12]
 8001026:	61a0      	str	r0, [r4, #24]
 8001028:	89a3      	ldrh	r3, [r4, #12]
 800102a:	f043 0304 	orr.w	r3, r3, #4
 800102e:	81a3      	strh	r3, [r4, #12]
 8001030:	6923      	ldr	r3, [r4, #16]
 8001032:	b91b      	cbnz	r3, 800103c <__srefill_r+0x84>
 8001034:	4621      	mov	r1, r4
 8001036:	4628      	mov	r0, r5
 8001038:	f7ff fda2 	bl	8000b80 <__smakebuf_r>
 800103c:	89a6      	ldrh	r6, [r4, #12]
 800103e:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 8001042:	07b3      	lsls	r3, r6, #30
 8001044:	d00f      	beq.n	8001066 <__srefill_r+0xae>
 8001046:	2301      	movs	r3, #1
 8001048:	81a3      	strh	r3, [r4, #12]
 800104a:	4b1e      	ldr	r3, [pc, #120]	; (80010c4 <__srefill_r+0x10c>)
 800104c:	491e      	ldr	r1, [pc, #120]	; (80010c8 <__srefill_r+0x110>)
 800104e:	6818      	ldr	r0, [r3, #0]
 8001050:	f006 0609 	and.w	r6, r6, #9
 8001054:	f7ff fcf0 	bl	8000a38 <_fwalk>
 8001058:	2e09      	cmp	r6, #9
 800105a:	81a7      	strh	r7, [r4, #12]
 800105c:	d103      	bne.n	8001066 <__srefill_r+0xae>
 800105e:	4621      	mov	r1, r4
 8001060:	4628      	mov	r0, r5
 8001062:	f7ff fb43 	bl	80006ec <__sflush_r>
 8001066:	6922      	ldr	r2, [r4, #16]
 8001068:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800106a:	6963      	ldr	r3, [r4, #20]
 800106c:	6a21      	ldr	r1, [r4, #32]
 800106e:	6022      	str	r2, [r4, #0]
 8001070:	4628      	mov	r0, r5
 8001072:	47b0      	blx	r6
 8001074:	2800      	cmp	r0, #0
 8001076:	6060      	str	r0, [r4, #4]
 8001078:	dc1c      	bgt.n	80010b4 <__srefill_r+0xfc>
 800107a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800107e:	bf17      	itett	ne
 8001080:	2200      	movne	r2, #0
 8001082:	f043 0320 	orreq.w	r3, r3, #32
 8001086:	6062      	strne	r2, [r4, #4]
 8001088:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 800108c:	e7bc      	b.n	8001008 <__srefill_r+0x50>
 800108e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001090:	2900      	cmp	r1, #0
 8001092:	d0cd      	beq.n	8001030 <__srefill_r+0x78>
 8001094:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001098:	4299      	cmp	r1, r3
 800109a:	d002      	beq.n	80010a2 <__srefill_r+0xea>
 800109c:	4628      	mov	r0, r5
 800109e:	f7ff fdaf 	bl	8000c00 <_free_r>
 80010a2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010a4:	6063      	str	r3, [r4, #4]
 80010a6:	2000      	movs	r0, #0
 80010a8:	6360      	str	r0, [r4, #52]	; 0x34
 80010aa:	2b00      	cmp	r3, #0
 80010ac:	d0c0      	beq.n	8001030 <__srefill_r+0x78>
 80010ae:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80010b0:	6023      	str	r3, [r4, #0]
 80010b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010b4:	2000      	movs	r0, #0
 80010b6:	e7fc      	b.n	80010b2 <__srefill_r+0xfa>
 80010b8:	08001114 	.word	0x08001114
 80010bc:	08001134 	.word	0x08001134
 80010c0:	080010f4 	.word	0x080010f4
 80010c4:	080010f0 	.word	0x080010f0
 80010c8:	08000fa5 	.word	0x08000fa5

080010cc <_init>:
 80010cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010ce:	bf00      	nop
 80010d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80010d2:	bc08      	pop	{r3}
 80010d4:	469e      	mov	lr, r3
 80010d6:	4770      	bx	lr

080010d8 <_fini>:
 80010d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010da:	bf00      	nop
 80010dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80010de:	bc08      	pop	{r3}
 80010e0:	469e      	mov	lr, r3
 80010e2:	4770      	bx	lr
